plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.50'
    id 'net.saliman.properties' version '1.5.1'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
    id 'java-library'
}

group 'com.alekseyzhelo'
version '0.9-ALPHA'

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    api "org.bitbucket.akornilov.kotlin:binary-streams:0.33"
    api group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'

    testImplementation 'io.kotlintest:kotlintest-runner-junit5:3.3.2'
    testRuntimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j18-impl', version: '2.12.1'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

buildConfig {
    appName = project.name
    version = project.version

    clsName = 'BuildConfig'
    packageName = project.group
    charset = 'UTF-8'

    buildConfigField 'String', 'EI_PATH', project.hasProperty('ei_path') ? ei_path : 'missing'
    buildConfigField 'String', 'EI_LA_PATH', project.hasProperty('ei_la_path') ? ei_la_path : 'missing'
}

jar {
    from sourceSets.main.allSource
}

task("fatJar", type: Jar) {
    archiveBaseName = "${project.name}-fat"
    from {
        configurations.runtimeClasspath.collect { if (it.isDirectory()) it else zipTree(it) }
    }
    exclude '/kotlin/**'
    exclude '**/*.kotlin_metadata'
    exclude '**/*.kotlin_module'
    exclude '**/*.kotlin_builtins'
    with(tasks.jar as CopySpec)
}
